plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'net.neoforged.gradle.userdev' version '7.0.159'
}

if (project.file('../gradletools.gradle').exists()) {
    apply from: '../gradletools.gradle'
} else {
    apply from: 'https://raw.githubusercontent.com/McJtyMods/MultiWorkspace/1.21_neo/gradletools.gradle'
}

group = "com.github.mcjty"
archivesBaseName = "lostcities"
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

if (System.getenv('BUILD_NUMBER') != null) {
    version += "-${System.getenv('BUILD_NUMBER')}"
}

repos()
at()
runs()
jars()

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    mc()
//    jei()
    top()
}

cfdeps(['the-one-probe'], [], [])
modrinth(['the-one-probe'], [], [])


subsystems {
    parchment {
        minecraftVersion = "${parchment_minecraft_version}"
        mappingsVersion = "${parchment_version}"
    }
}


task apiJar(type: Jar) {
    archiveClassifier = "api"
    from(sourceSets.main.output) {
        include "mcjty/lostcities/api/**"
    }
}

artifacts {
    archives apiJar
}

publishing {
    publications.create('mavenJava', MavenPublication) {
        from components.java
        artifact apiJar

        artifactId = project.archivesBaseName
        pom {
            name = 'LostCities'
            description = 'Lost Cities'
            scm {
                url = 'https://github.com/McJtyMods/LostCities'
                connection = 'scm:git:git@github.com:McJtyMods/LostCities.git'
                developerConnection = 'scm:git:git@github.com:McJtyMods/LostCities.git'
            }
            issueManagement {
                system = 'github'
                url = 'https://github.com/McJtyMods/LostCities/issues'
            }
            licenses {
                license {
                    name = 'MIT'
                    distribution = 'repo'
                }
            }
            developers {
                developer {
                    id = 'McJty'
                    name = 'McJty'
                    roles = ['developer']
                }
            }
        }
    }
    repositories {
        if (System.getenv('local_maven') != null) {
            maven {
                name = 'local'
                url = 'file://' + System.getenv('local_maven')
            }
        }
    }
}


